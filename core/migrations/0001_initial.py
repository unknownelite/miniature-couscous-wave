# Generated by Django 5.2.1 on 2025-07-11 14:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('daily_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('mining_points_rate', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SystemWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('USDT', 'USDT (TRC20)'), ('BTC', 'Bitcoin'), ('ETH', 'Ethereum')], max_length=10, unique=True)),
                ('address', models.CharField(max_length=100)),
                ('qr_code', models.ImageField(upload_to='wallet_qr_codes/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('dob', models.DateField(blank=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, upload_to='profile_pics/')),
                ('available_balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_invested', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total_withdrawn', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('mining_points', models.PositiveIntegerField(default=0)),
                ('language', models.CharField(default='en', max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('cashapp_tag', models.CharField(blank=True, max_length=50)),
                ('paypal_email', models.EmailField(blank=True, max_length=254)),
                ('bank_account', models.TextField(blank=True)),
                ('usdt_address', models.CharField(blank=True, max_length=100)),
                ('btc_address', models.CharField(blank=True, max_length=100)),
                ('eth_address', models.CharField(blank=True, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('date_invested', models.DateTimeField(auto_now_add=True)),
                ('last_interest_date', models.DateTimeField(auto_now_add=True)),
                ('daily_interest', models.DecimalField(decimal_places=2, default=0, max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('can_withdraw', models.BooleanField(default=False)),
                ('next_withdrawal_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.investmentplan')),
            ],
            options={
                'verbose_name': 'User Investment',
                'verbose_name_plural': 'User Investments',
                'ordering': ['-date_invested'],
            },
        ),
        migrations.CreateModel(
            name='KYCDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('driver_license', "Driver's License"), ('national_id', 'National ID Card')], max_length=20)),
                ('document_number', models.CharField(max_length=100)),
                ('front_image', models.ImageField(upload_to='kyc_docs/')),
                ('back_image', models.ImageField(blank=True, upload_to='kyc_docs/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('interest', 'Interest'), ('mining', 'Mining Points Conversion')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('successful', 'Successful'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('proof', models.FileField(blank=True, null=True, upload_to='payment_proofs/')),
                ('currency', models.CharField(choices=[('USDT', 'USDT (TRC20)'), ('BTC', 'Bitcoin'), ('ETH', 'Ethereum')], default='USD', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
